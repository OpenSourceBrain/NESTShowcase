# NESTML file for Component: hr_regular_flat
#
#    PLEASE NOTE: This export is not yet complete
#
package codegeneration.hr_regular_flat_module:

neuron hr_regular_flat:

    state:
        x real
        y real
        z real
        alias phi real = (((y - (a * (x ^ 3.0))) + (b * (x ^ 2.0))) + I)  
        alias chi real = ((c - (d * (x ^ 2.0))) - y)  
        alias rho real = ((s * (x - x1)) - z)  
    end

    parameter:
        a real = 1.0
        b real = 3.0
        c real = -3.0
        d real = 5.0
        I real = 5.0
        r real = 0.002
        s real = 4.0
        x1 real = -1.3
        x0 real = -1.3
        y0 real = -1.0
        z0 real = 1.0
        SEC real = 1.0
    end

    input:
        spikeBuffer <- spike  
        currentBuffer <- current
    end

    output: spike

    dynamics timestep(t ms):

        ODE:
            d/dt x := ((phi - z) / SEC)
            d/dt y := (chi / SEC)
            d/dt z := (r * (rho / SEC))
        end

    end

end






